{"ast":null,"code":"var _jsxFileName = \"/home/sagi/myapp/frontend/src/components/MyMeals.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from \"react\";\nimport MealColumn from \"./MealColumn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyMeals() {\n  _s();\n  const [breakfastFoods, setBreakfastFoods] = useState([]);\n  const [lunchFoods, setLunchFoods] = useState([]);\n  const [dinnerFoods, setDinnerFoods] = useState([]);\n  const fetchFoods = async meal_name => {\n    try {\n      const response = await fetch(`http://localhost:8000/meals/${meal_name}`);\n      if (response.ok) {\n        const contentLength = response.headers.get('Content-Length');\n        if (contentLength && parseInt(contentLength) > 0) {\n          const data = await response.json();\n          if (meal_name === \"breakfast\") setBreakfastFoods(data);else if (meal_name === \"lunch\") setLunchFoods(data);else if (meal_name === \"dinner\") setDinnerFoods(data);\n        } else {\n          console.log(\"Error: Response body is empty\");\n        }\n      } else {\n        console.log(`Error: ${response.status}, food does not exist in the database`);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n    //console.log(breakfastFoods);\n    //console.log(lunchFoods);\n    //console.log(dinnerFoods);\n  };\n\n  // Function to remove a food item from the column\n  const removeFood = async (food_name, meal_name) => {\n    try {\n      const response = await fetch(`http://localhost:8000/meals/food/${food_name}?meal_name=${meal_name}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.ok) {\n        switch (meal_name) {\n          case \"breakfast\":\n            setBreakfastFoods(breakfastFoods.filter(food => food[\"food_name\"] !== food_name));\n            break;\n          case \"lunch\":\n            setLunchFoods(lunchFoods.filter(food => food[\"food_name\"] !== food_name));\n            break;\n          case \"dinner\":\n            setDinnerFoods(dinnerFoods.filter(food => food[\"food_name\"] !== food_name));\n            break;\n          default:\n            break;\n        }\n      }\n    } catch (error) {\n      console.error(\"Error removing food:\", error);\n    }\n  };\n\n  // Function to update quantity of a food item\n  const updateQuantity = async (meal_name, food_name, newQuantity) => {\n    try {\n      const response = await fetch(`http://localhost:8000/meals/food/${food_name}?meal_name=${meal_name}&newQuantity=${newQuantity}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.ok) console.log('Quantity Changed!');else console.log('there was a problem while trying to change the quantity');\n    } catch (error) {\n      console.error(\"Error changing the quantity:\", error);\n    }\n  };\n\n  // Function to calculate total calories for a meal column\n  //const calculateTotalCalories = (foods) => {\n  //  return foods.reduce((totalCalories, food) => totalCalories + (food.calories * food.quantity), 0);\n  //};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"My Meals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-5 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(MealColumn, {\n          title: \"Breakfast\",\n          fetchFoods: () => fetchFoods(\"breakfast\"),\n          foods: breakfastFoods,\n          onRemoveFoods: food_name => removeFood(food_name, \"breakfast\"),\n          onUpdateQuantity: (food_name, newQuantity) => updateQuantity(\"breakfast\", food_name, newQuantity)\n          //calculateTotalCalories={calculateTotalCalories}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(MealColumn, {\n          title: \"Lunch\",\n          fetchFoods: () => fetchFoods(\"lunch\"),\n          foods: lunchFoods,\n          onRemoveFoods: food_name => removeFood(food_name, \"lunch\"),\n          onUpdateQuantity: (food_name, newQuantity) => updateQuantity('lunch', food_name, newQuantity)\n          //calculateTotalCalories={calculateTotalCalories}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(MealColumn, {\n          title: \"Dinner\",\n          fetchFoods: () => fetchFoods(\"dinner\"),\n          foods: dinnerFoods,\n          onRemoveFoods: food_name => removeFood(food_name, \"dinner\"),\n          onUpdateQuantity: (food_name, newQuantity) => updateQuantity('dinner', food_name, newQuantity)\n          //calculateTotalCalories={calculateTotalCalories}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(MyMeals, \"vmq384xr329fgS18hER++Q/cKM0=\");\n_c = MyMeals;\nexport default MyMeals;\nvar _c;\n$RefreshReg$(_c, \"MyMeals\");","map":{"version":3,"names":["React","useState","useCallback","MealColumn","jsxDEV","_jsxDEV","MyMeals","_s","breakfastFoods","setBreakfastFoods","lunchFoods","setLunchFoods","dinnerFoods","setDinnerFoods","fetchFoods","meal_name","response","fetch","ok","contentLength","headers","get","parseInt","data","json","console","log","status","error","removeFood","food_name","method","filter","food","updateQuantity","newQuantity","children","className","fileName","_jsxFileName","lineNumber","columnNumber","title","foods","onRemoveFoods","onUpdateQuantity","_c","$RefreshReg$"],"sources":["/home/sagi/myapp/frontend/src/components/MyMeals.js"],"sourcesContent":["import React, { useState,useCallback } from \"react\";\nimport MealColumn from \"./MealColumn\";\n\nfunction MyMeals() {\n  const [breakfastFoods, setBreakfastFoods] = useState([]);\n  const [lunchFoods, setLunchFoods] = useState([]);\n  const [dinnerFoods, setDinnerFoods] = useState([]);\n\n  const fetchFoods = async (meal_name) => {\n    try {\n      const response = await fetch(`http://localhost:8000/meals/${meal_name}`);\n      if (response.ok) {\n        const contentLength = response.headers.get('Content-Length');\n      if (contentLength && parseInt(contentLength) > 0) {\n        const data = await response.json();\n        if (meal_name === \"breakfast\") setBreakfastFoods(data);\n        else if (meal_name === \"lunch\") setLunchFoods(data);\n        else if (meal_name === \"dinner\") setDinnerFoods(data);\n      } else {\n        console.log(\"Error: Response body is empty\");\n      }\n      } else {\n        console.log(\n          `Error: ${response.status}, food does not exist in the database`\n        );\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n    //console.log(breakfastFoods);\n    //console.log(lunchFoods);\n    //console.log(dinnerFoods);\n  };\n\n  // Function to remove a food item from the column\n  const removeFood = async (food_name, meal_name) => {\n    try {\n      const response = await fetch(\n        `http://localhost:8000/meals/food/${food_name}?meal_name=${meal_name}`,\n        {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      if (response.ok) {\n        switch (meal_name) {\n          case \"breakfast\":\n            setBreakfastFoods(\n              breakfastFoods.filter((food) => food[\"food_name\"] !== food_name)\n            );\n            break;\n          case \"lunch\":\n            setLunchFoods(\n              lunchFoods.filter((food) => food[\"food_name\"] !== food_name)\n            );\n            break;\n          case \"dinner\":\n            setDinnerFoods(\n              dinnerFoods.filter((food) => food[\"food_name\"] !== food_name)\n            );\n            break;\n          default:\n            break;\n        }\n      }\n    } catch (error) {\n      console.error(\"Error removing food:\", error);\n    }\n  };\n\n  // Function to update quantity of a food item\n  const updateQuantity = async (meal_name,food_name, newQuantity) => {\n    try{\n      const response = await fetch(`http://localhost:8000/meals/food/${food_name}?meal_name=${meal_name}&newQuantity=${newQuantity}`,\n    {\n      method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n    });\n    if(response.ok)\n      console.log('Quantity Changed!')\n    else\n      console.log('there was a problem while trying to change the quantity')\n\n    } catch (error) { \n    \n        console.error(\"Error changing the quantity:\", error);\n      \n\n    }\n  };\n\n  // Function to calculate total calories for a meal column\n  //const calculateTotalCalories = (foods) => {\n  //  return foods.reduce((totalCalories, food) => totalCalories + (food.calories * food.quantity), 0);\n  //};\n  \n\n  return (\n    <div>\n      <h1 className=\"text-center\">My Meals</h1>\n      <div className=\"row mt-5 text-center\">\n        <div className=\"col\">\n          <MealColumn\n            title=\"Breakfast\"\n            fetchFoods={() => fetchFoods(\"breakfast\")}\n            foods={breakfastFoods}\n            onRemoveFoods={(food_name) => removeFood(food_name, \"breakfast\")}\n            onUpdateQuantity={(food_name,newQuantity)=>updateQuantity(\"breakfast\",food_name,newQuantity)}\n            //calculateTotalCalories={calculateTotalCalories}\n          />\n        </div>\n        <div className=\"col\">\n          <MealColumn\n            title=\"Lunch\"\n            fetchFoods={() => fetchFoods(\"lunch\")}\n            foods={lunchFoods}\n            onRemoveFoods={(food_name) => removeFood(food_name, \"lunch\")}\n            onUpdateQuantity={(food_name,newQuantity)=>updateQuantity('lunch',food_name,newQuantity)}\n            //calculateTotalCalories={calculateTotalCalories}\n          />\n        </div>\n        <div className=\"col\">\n          <MealColumn\n            title=\"Dinner\"\n            fetchFoods={() => fetchFoods(\"dinner\")}\n            foods={dinnerFoods}\n            onRemoveFoods={(food_name) => removeFood(food_name, \"dinner\")}\n            onUpdateQuantity={(food_name,newQuantity)=>updateQuantity('dinner',food_name,newQuantity)}\n            //calculateTotalCalories={calculateTotalCalories}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MyMeals;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
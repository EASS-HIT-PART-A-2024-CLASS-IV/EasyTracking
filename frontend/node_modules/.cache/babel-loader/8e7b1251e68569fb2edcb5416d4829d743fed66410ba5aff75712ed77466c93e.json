{"ast":null,"code":"var _jsxFileName = \"/home/sagi/myapp/frontend/src/components/MealColumn.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport FoodItem from \"./FoodItem\";\nimport TotalCalories from \"./TotalCalories\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MealColumn({\n  title,\n  fetchFoods,\n  foods,\n  onRemoveFoods,\n  onUpdateQuantity,\n  calculateTotalCalories\n}) {\n  _s();\n  useEffect(() => {\n    switch (title) {\n      case \"Breakfast\":\n        fetchFoods('b');\n        break;\n      case \"lunch\":\n        fetchFoods(meal_name);\n        break;\n      case \"dinner\":\n        fetchFoods(meal_name);\n        break;\n      default:\n        break;\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"meal-column\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"thead-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Calories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Proteins\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Carbs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Fats\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity(Grams)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: foods.map(food => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: food['food_name']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: food['calories_100g']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: food['proteins']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: food['carbohydrates']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: food['fats']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"0\",\n              max: \"1000\",\n              value: food['quantity'],\n              onChange: e => onUpdateQuantity(food['food_name'], parseInt(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onRemoveFoods(food['food_name']),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, food.index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TotalCalories, {\n      totalCalories: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(MealColumn, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MealColumn;\nexport default MealColumn;\nvar _c;\n$RefreshReg$(_c, \"MealColumn\");","map":{"version":3,"names":["React","useEffect","useState","FoodItem","TotalCalories","jsxDEV","_jsxDEV","MealColumn","title","fetchFoods","foods","onRemoveFoods","onUpdateQuantity","calculateTotalCalories","_s","meal_name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","food","type","min","max","value","onChange","e","parseInt","target","onClick","index","totalCalories","_c","$RefreshReg$"],"sources":["/home/sagi/myapp/frontend/src/components/MealColumn.js"],"sourcesContent":["\nimport React,{ useEffect,useState } from \"react\";\nimport FoodItem from \"./FoodItem\";\nimport TotalCalories from \"./TotalCalories\";\n\nfunction MealColumn({ title, fetchFoods, foods,onRemoveFoods,onUpdateQuantity, calculateTotalCalories }) {\n\n\n  \n\n\n  \n  useEffect(() => {\n    switch (title) {\n      case \"Breakfast\":\n        fetchFoods('b');\n        break;\n      case \"lunch\":\n        fetchFoods(meal_name);\n        break;\n      case \"dinner\":\n        fetchFoods(meal_name);\n        break;\n      default:\n        break;\n    }\n  }, []);\n\n  \n\n  return (\n    <div className=\"meal-column\">\n      <h2>{title}</h2>\n      <table className=\"table\">\n        <thead className=\"thead-dark\">\n          <tr>\n            <th>Name</th>\n            <th>Calories</th>\n            <th>Proteins</th>\n            <th>Carbs</th>\n            <th>Fats</th>\n            <th>Quantity(Grams)</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {foods.map((food) => (\n            <tr key={food.index}>\n              <td>{food['food_name']}</td>\n              <td>{food['calories_100g']}</td>\n              <td>{food['proteins']}</td>\n              <td>{food['carbohydrates']}</td>\n              <td>{food['fats']}</td>\n              <td>\n                <input\n                  type=\"number\"\n                  min='0'\n                  max='1000'\n                  value={food['quantity']}\n                  onChange={(e) => onUpdateQuantity(food['food_name'], parseInt(e.target.value))}\n                />\n              </td>\n              <td>\n                <button onClick={() => onRemoveFoods(food['food_name'])}>Remove</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <TotalCalories totalCalories />\n      {/* Add button for navigating to the search page */}\n    </div>\n  );\n}\n      \n\nexport default MealColumn;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/sagi/myapp/frontend/src/components/MealColumn.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport FoodItem from \"./FoodItem\";\nimport TotalCalories from \"./TotalCalories\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MealColumn({\n  title,\n  fetchFoods,\n  foods,\n  onRemoveFoods,\n  onUpdateQuantity\n}) {\n  _s();\n  const [updatedQuantities, setUpdatedQuantities] = useState({});\n  const handleQuantityChange = (foodName, newQuantity) => {\n    setUpdatedQuantities(prevQuantities => ({\n      ...prevQuantities,\n      [foodName]: newQuantity\n    }));\n  };\n  const handleUpdateQuantity = async foodName => {\n    const newQuantity = updatedQuantities[foodName];\n    await onUpdateQuantity(foodName, newQuantity);\n    fetchFoods(); // Fetch new data after updating quantity\n  };\n\n  // Function to calculate total calories for the meal\n  const calculateTotal = () => {\n    let totalCalories = 0;\n    let totalProteins = 0;\n    let totalCarbs = 0;\n    let totalFats = 0;\n    foods.forEach(food => {\n      const quantity = updatedQuantities[food['food_name']] || food['quantity'];\n      totalCalories += food['calories_100g'] / 100 * quantity;\n      totalProteins += food['proteins'] / 100 * quantity;\n      totalCarbs += food['carbohydrates'] / 100 * quantity;\n      totalFats += food['fats'] / 100 * quantity;\n    });\n    return {\n      totalCalories: totalCalories.toFixed(2),\n      totalProteins: totalProteins.toFixed(2),\n      totalCarbs: totalCarbs.toFixed(2),\n      totalFats: totalFats.toFixed(2)\n    };\n  };\n  const {\n    totalCalories,\n    totalProteins,\n    totalCarbs,\n    totalFats\n  } = calculateTotal();\n  useEffect(() => {\n    fetchFoods();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"meal-column\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"thead-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Calories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Proteins\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Carbs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Fats\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity(Grams)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: foods.map((food, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: food[\"food_name\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: food[\"calories_100g\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: food[\"proteins\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: food[\"carbohydrates\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: food[\"fats\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"0\",\n              max: \"1000\",\n              value: updatedQuantities[food[\"food_name\"]] !== undefined ? updatedQuantities[food[\"food_name\"]] : food[\"quantity\"],\n              onChange: e => handleQuantityChange(food[\"food_name\"], parseInt(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleUpdateQuantity(food[\"food_name\"]),\n              children: \"Update Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onRemoveFoods(food[\"food_name\"]),\n              children: \"Remove Food\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Total Calories:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), \" \", totalCalories, \" kcal\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Total Proteins:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), \" \", totalProteins, \" g\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Total Carbohydrates:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), \" \", totalCarbs, \" g\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Total Fats:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), \" \", totalFats, \" g\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(MealColumn, \"T9u/ocYvFAGWE8q87Ty3bUjuIJo=\");\n_c = MealColumn;\nexport default MealColumn;\nvar _c;\n$RefreshReg$(_c, \"MealColumn\");","map":{"version":3,"names":["React","useEffect","useState","FoodItem","TotalCalories","jsxDEV","_jsxDEV","MealColumn","title","fetchFoods","foods","onRemoveFoods","onUpdateQuantity","_s","updatedQuantities","setUpdatedQuantities","handleQuantityChange","foodName","newQuantity","prevQuantities","handleUpdateQuantity","calculateTotal","totalCalories","totalProteins","totalCarbs","totalFats","forEach","food","quantity","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","min","max","value","undefined","onChange","e","parseInt","target","onClick","_c","$RefreshReg$"],"sources":["/home/sagi/myapp/frontend/src/components/MealColumn.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport FoodItem from \"./FoodItem\";\nimport TotalCalories from \"./TotalCalories\";\n\nfunction MealColumn({\n  title,\n  fetchFoods,\n  foods,\n  onRemoveFoods,\n  onUpdateQuantity,\n}) {\n  const [updatedQuantities, setUpdatedQuantities] = useState({});\n\n  const handleQuantityChange = (foodName, newQuantity) => {\n    setUpdatedQuantities((prevQuantities) => ({\n      ...prevQuantities,\n      [foodName]: newQuantity,\n    }));\n  };\n\n  const handleUpdateQuantity = async (foodName) => {\n    const newQuantity = updatedQuantities[foodName];\n    await onUpdateQuantity(foodName, newQuantity);\n    fetchFoods(); // Fetch new data after updating quantity\n  };\n\n  // Function to calculate total calories for the meal\n  const calculateTotal = () => {\n    let totalCalories = 0;\n    let totalProteins = 0;\n    let totalCarbs = 0;\n    let totalFats = 0;\n    \n    foods.forEach(food => {\n      const quantity = updatedQuantities[food['food_name']] || food['quantity'];\n      totalCalories += (food['calories_100g'] / 100) * quantity;\n      totalProteins += (food['proteins'] / 100) * quantity;\n      totalCarbs += (food['carbohydrates'] / 100) * quantity;\n      totalFats += (food['fats'] / 100) * quantity;\n    });\n\n    return {\n      totalCalories: totalCalories.toFixed(2),\n      totalProteins: totalProteins.toFixed(2),\n      totalCarbs: totalCarbs.toFixed(2),\n      totalFats: totalFats.toFixed(2),\n    };\n  };\n\n  const { totalCalories, totalProteins, totalCarbs, totalFats } = calculateTotal();\n\n  useEffect(() => {\n    fetchFoods();\n  }, []);\n\n  return (\n    <div className=\"meal-column\">\n      <h2>{title}</h2>\n      <table className=\"table\">\n        <thead className=\"thead-dark\">\n          <tr>\n            <th>Name</th>\n            <th>Calories</th>\n            <th>Proteins</th>\n            <th>Carbs</th>\n            <th>Fats</th>\n            <th>Quantity(Grams)</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {foods.map((food, index) => (\n            <tr key={index}>\n              <td>{food[\"food_name\"]}</td>\n              <td>{food[\"calories_100g\"]}</td>\n              <td>{food[\"proteins\"]}</td>\n              <td>{food[\"carbohydrates\"]}</td>\n              <td>{food[\"fats\"]}</td>\n              <td>\n                <input\n                  type=\"number\"\n                  min=\"0\"\n                  max=\"1000\"\n                  value={\n                    updatedQuantities[food[\"food_name\"]] !== undefined\n                      ? updatedQuantities[food[\"food_name\"]]\n                      : food[\"quantity\"]\n                  }\n                  onChange={(e) =>\n                    handleQuantityChange(\n                      food[\"food_name\"],\n                      parseInt(e.target.value)\n                    )\n                  }\n                />\n              </td>\n              <td>\n                <button onClick={() => handleUpdateQuantity(food[\"food_name\"])}>\n                  Update Quantity\n                </button>\n                <button onClick={() => onRemoveFoods(food[\"food_name\"])}>\n                  Remove Food\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div>\n        <strong>Total Calories:</strong> {totalCalories} kcal\n        <br />\n        <strong>Total Proteins:</strong> {totalProteins} g\n        <br />\n        <strong>Total Carbohydrates:</strong> {totalCarbs} g\n        <br />\n        <strong>Total Fats:</strong> {totalFats} g\n      </div>\n      {/* Add button for navigating to the search page */}\n    </div>\n  );\n}\n\nexport default MealColumn;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}